generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    username      String?   @unique @db.VarChar(255)
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    links         link[]
}

model link {
    id        Int      @id @default(autoincrement())
    url       String   @db.Text
    slug      String   @unique @map("slug") @db.Text
    createdAt DateTime @default(now())
    createdBy User?    @relation(fields: [creatorId], references: [id])
    creatorId String
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique @map("session_token") @db.Text
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String?
    provider          String
    providerAccountId String  @map("provider_account_id")
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@map("accounts")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
